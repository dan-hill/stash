scalar ObjectId

type Thing {
    _id: ObjectId!
    name: String
    summary: String
    category: Category
    subcategory: String
    user: String
    attributes: [Attribute]
    sources: [Source]
    instances: [Instance]
}

type Category {
    _id: ObjectId!
    name: String
    children: [Category]
    parent: Category
}

type Instance {
    _id: ObjectId!
    name: String
    instance: Instance
    quantity: Int
    minimum_quantity: Int
    transferable: Boolean
}

type Source {
    _id: ObjectId!
    name: String
    url: String
    price: Float
}

type Attribute {
    _id: ObjectId!
    key: String
    value: String
}

type Query {
    thing(_id: ObjectId): Thing
    things: [Thing],
    category(_id: ObjectId): Category,
    categories: [Category],
    instances: [Instance]
    sources: [Source]
    attributes: [Attribute]
    user(_id: ObjectId): User
    me: User
}

input ThingInput {
    name: String
    summary: String
    category: String
    subcategory: String
    user: String
    attributes: [ObjectId]
    sources: [ObjectId]
    instances: [ObjectId]
}

input CategoryInput {
    name: String
    children: [ObjectId]
    parent: ObjectId
}

input InstanceInput {
    name: String
    instance: ObjectId
    quantity: Int
    minimum_quantity: Int
    transferable: Boolean
}

input SourceInput {
    name: String
    url: String
    price: Float
}

input AttributeInput {
    key: String
    value: String
}

type User {
  _id: ObjectId!
  email: String!
}

type Mutation {
    createThing(input: ThingInput): Thing
    updateThing(thingId: ObjectId, input: ThingInput): Thing
    deleteThing(_id: ObjectId): ObjectId
    createCategory(input: CategoryInput): Category
    updateCategory(categoryId: ObjectId, input: CategoryInput): Category
    deleteCategory(_id: ObjectId): ObjectId
    createInstance(owner: ObjectId, input: InstanceInput): Instance
    createSource(thingId: ObjectId, input: SourceInput): Source
    updateSource(sourceId: ObjectId, input: SourceInput): Source
    deleteSource(thingId: ObjectId, sourceId: ObjectId): ObjectId
    createAttribute(thingId: ObjectId, input: AttributeInput): Attribute
    updateAttribute(attributeId: ObjectId, input: AttributeInput): Attribute
    deleteAttribute(thingId: ObjectId, attributeId: ObjectId): ObjectId
    deleteInstance(thingId: ObjectId, instanceId: ObjectId): ObjectId
    updateInstance(_id: ObjectId, input: InstanceInput): Instance

}
